{
	"id": "ab7c1e686ad65276adb1f10effd5dafb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/YieldSharing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface FTTContract {\r\n    function totalTreesPerFTT(uint256 fttTokenId) external view returns (uint256);\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n}\r\n\r\ninterface FTOContract {\r\n    function getTokenProfitPercentage(uint256 ftoTokenId) external view returns (uint256);\r\n    function totalTreesPerFTO(uint256 ftoTokenId) external view returns (uint256);\r\n}\r\n\r\ncontract YieldSharing {\r\n    FTTContract fttContract;\r\n    FTOContract ftoContract;\r\n\r\n    constructor(address _fttContractAddress, address _ftoContractAddress) {\r\n        fttContract = FTTContract(_fttContractAddress);\r\n        ftoContract = FTOContract(_ftoContractAddress);\r\n    }\r\n\r\n    function distributeProfit(uint256 distributedAmount, uint256 ftoTokenId) external payable {\r\n        require(msg.value == distributedAmount, \"Incorrect value sent\");\r\n\r\n        uint256 totalTrees = ftoContract.totalTreesPerFTO(ftoTokenId);\r\n        require(totalTrees > 0, \"Invalid FTO tokenId\");\r\n\r\n        uint256 profitShare = (distributedAmount * ftoContract.getTokenProfitPercentage(ftoTokenId)) / 100;\r\n        require(profitShare > 0, \"Invalid profit share\");\r\n\r\n        // Distribute profit to FTT holders based on their ownership of trees\r\n        for (uint256 fttTokenId = 1; fttTokenId <= totalTrees; fttTokenId++) {\r\n            address fttOwner = fttContract.ownerOf(fttTokenId);\r\n            uint256 treesOwned = fttContract.totalTreesPerFTT(fttTokenId);\r\n\r\n            // Calculate profit share per tree\r\n            uint256 profitSharePerTree = profitShare / totalTrees;\r\n            uint256 allocation = profitSharePerTree * treesOwned;\r\n\r\n            // Transfer the profit allocation to the FTT token owner\r\n            payable(fttOwner).transfer(allocation);\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/YieldSharing.sol": {
				"FTOContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ftoTokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenProfitPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ftoTokenId",
									"type": "uint256"
								}
							],
							"name": "totalTreesPerFTO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTokenProfitPercentage(uint256)": "d551a166",
							"totalTreesPerFTO(uint256)": "31937bc6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ftoTokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenProfitPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ftoTokenId\",\"type\":\"uint256\"}],\"name\":\"totalTreesPerFTO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldSharing.sol\":\"FTOContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YieldSharing.sol\":{\"keccak256\":\"0x1714d66d59be4a8a87694c6cdb4f1ce8c9ee6a7b83d197da40eb43ed844ac95d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b199724d4e7f5ce16be9172d20e59985b4fbdde2f2ad3a2ed504b1d553de8303\",\"dweb:/ipfs/QmY2p1wY18E7TZoxuZ5r5tt35qFabEPjic7vghfZZ1qsfT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FTTContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fttTokenId",
									"type": "uint256"
								}
							],
							"name": "totalTreesPerFTT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ownerOf(uint256)": "6352211e",
							"totalTreesPerFTT(uint256)": "19842098"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fttTokenId\",\"type\":\"uint256\"}],\"name\":\"totalTreesPerFTT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldSharing.sol\":\"FTTContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YieldSharing.sol\":{\"keccak256\":\"0x1714d66d59be4a8a87694c6cdb4f1ce8c9ee6a7b83d197da40eb43ed844ac95d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b199724d4e7f5ce16be9172d20e59985b4fbdde2f2ad3a2ed504b1d553de8303\",\"dweb:/ipfs/QmY2p1wY18E7TZoxuZ5r5tt35qFabEPjic7vghfZZ1qsfT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"YieldSharing": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_fttContractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ftoContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ftoTokenId",
									"type": "uint256"
								}
							],
							"name": "distributeProfit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/YieldSharing.sol\":452:1842  contract YieldSharing {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/YieldSharing.sol\":543:735  constructor(address _fttContractAddress, address _ftoContractAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/YieldSharing.sol\":624:635  fttContract */\n  0x00\n    /* \"contracts/YieldSharing.sol\":624:670  fttContract = FTTContract(_fttContractAddress) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/YieldSharing.sol\":681:727  ftoContract = FTOContract(_ftoContractAddress) */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/YieldSharing.sol\":452:1842  contract YieldSharing {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_12:\n    /* \"#utility.yul\":375:415   */\n  tag_13\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_14\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_8:\n    /* \"contracts/YieldSharing.sol\":452:1842  contract YieldSharing {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/YieldSharing.sol\":452:1842  contract YieldSharing {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe4af7334\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/YieldSharing.sol\":743:1839  function distributeProfit(uint256 distributedAmount, uint256 ftoTokenId) external payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      stop\n    tag_6:\n        /* \"contracts/YieldSharing.sol\":865:882  distributedAmount */\n      dup2\n        /* \"contracts/YieldSharing.sol\":852:861  msg.value */\n      callvalue\n        /* \"contracts/YieldSharing.sol\":852:882  msg.value == distributedAmount */\n      eq\n        /* \"contracts/YieldSharing.sol\":844:907  require(msg.value == distributedAmount, \"Incorrect value sent\") */\n      tag_8\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"contracts/YieldSharing.sol\":844:907  require(msg.value == distributedAmount, \"Incorrect value sent\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":451:472   */\n      mstore\n        /* \"#utility.yul\":508:510   */\n      0x14\n        /* \"#utility.yul\":488:506   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":481:511   */\n      mstore\n      shl(0x62, 0x125b98dbdc9c9958dd081d985b1d59481cd95b9d)\n        /* \"#utility.yul\":527:545   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":520:570   */\n      mstore\n        /* \"#utility.yul\":587:605   */\n      0x64\n      add\n        /* \"contracts/YieldSharing.sol\":844:907  require(msg.value == distributedAmount, \"Incorrect value sent\") */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_8:\n        /* \"contracts/YieldSharing.sol\":941:952  ftoContract */\n      sload(0x01)\n        /* \"contracts/YieldSharing.sol\":941:981  ftoContract.totalTreesPerFTO(ftoTokenId) */\n      mload(0x40)\n      shl(0xe1, 0x18c9bde3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":762:787   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/YieldSharing.sol\":920:938  uint256 totalTrees */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldSharing.sol\":941:952  ftoContract */\n      and\n      swap1\n        /* \"contracts/YieldSharing.sol\":941:969  ftoContract.totalTreesPerFTO */\n      0x31937bc6\n      swap1\n        /* \"#utility.yul\":735:753   */\n      0x24\n      add\n        /* \"contracts/YieldSharing.sol\":941:981  ftoContract.totalTreesPerFTO(ftoTokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/YieldSharing.sol\":920:981  uint256 totalTrees = ftoContract.totalTreesPerFTO(ftoTokenId) */\n      swap1\n      pop\n        /* \"contracts/YieldSharing.sol\":1013:1014  0 */\n      0x00\n        /* \"contracts/YieldSharing.sol\":1000:1010  totalTrees */\n      dup2\n        /* \"contracts/YieldSharing.sol\":1000:1014  totalTrees > 0 */\n      gt\n        /* \"contracts/YieldSharing.sol\":992:1038  require(totalTrees > 0, \"Invalid FTO tokenId\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"contracts/YieldSharing.sol\":992:1038  require(totalTrees > 0, \"Invalid FTO tokenId\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1171:1192   */\n      mstore\n        /* \"#utility.yul\":1228:1230   */\n      0x13\n        /* \"#utility.yul\":1208:1226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1201:1231   */\n      mstore\n      shl(0x6a, 0x125b9d985b1a5908119513c81d1bdad95b9259)\n        /* \"#utility.yul\":1247:1265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1240:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1324   */\n      0x64\n      add\n        /* \"contracts/YieldSharing.sol\":992:1038  require(totalTrees > 0, \"Invalid FTO tokenId\") */\n      tag_9\n        /* \"#utility.yul\":987:1330   */\n      jump\n        /* \"contracts/YieldSharing.sol\":992:1038  require(totalTrees > 0, \"Invalid FTO tokenId\") */\n    tag_17:\n        /* \"contracts/YieldSharing.sol\":1094:1105  ftoContract */\n      sload(0x01)\n        /* \"contracts/YieldSharing.sol\":1094:1142  ftoContract.getTokenProfitPercentage(ftoTokenId) */\n      mload(0x40)\n      shl(0xe1, 0x6aa8d0b3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":762:787   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/YieldSharing.sol\":1051:1070  uint256 profitShare */\n      0x00\n      swap2\n        /* \"contracts/YieldSharing.sol\":1146:1149  100 */\n      0x64\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldSharing.sol\":1094:1105  ftoContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/YieldSharing.sol\":1094:1130  ftoContract.getTokenProfitPercentage */\n      0xd551a166\n      swap1\n        /* \"#utility.yul\":735:753   */\n      0x24\n      add\n        /* \"contracts/YieldSharing.sol\":1094:1142  ftoContract.getTokenProfitPercentage(ftoTokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"contracts/YieldSharing.sol\":1074:1142  distributedAmount * ftoContract.getTokenProfitPercentage(ftoTokenId) */\n      tag_24\n      swap1\n        /* \"contracts/YieldSharing.sol\":1074:1091  distributedAmount */\n      dup7\n        /* \"contracts/YieldSharing.sol\":1074:1142  distributedAmount * ftoContract.getTokenProfitPercentage(ftoTokenId) */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/YieldSharing.sol\":1073:1149  (distributedAmount * ftoContract.getTokenProfitPercentage(ftoTokenId)) / 100 */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"contracts/YieldSharing.sol\":1051:1149  uint256 profitShare = (distributedAmount * ftoContract.getTokenProfitPercentage(ftoTokenId)) / 100 */\n      swap1\n      pop\n        /* \"contracts/YieldSharing.sol\":1182:1183  0 */\n      0x00\n        /* \"contracts/YieldSharing.sol\":1168:1179  profitShare */\n      dup2\n        /* \"contracts/YieldSharing.sol\":1168:1183  profitShare > 0 */\n      gt\n        /* \"contracts/YieldSharing.sol\":1160:1208  require(profitShare > 0, \"Invalid profit share\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2064:2066   */\n      0x20\n        /* \"contracts/YieldSharing.sol\":1160:1208  require(profitShare > 0, \"Invalid profit share\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2046:2067   */\n      mstore\n        /* \"#utility.yul\":2103:2105   */\n      0x14\n        /* \"#utility.yul\":2083:2101   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2076:2106   */\n      mstore\n      shl(0x60, 0x496e76616c69642070726f666974207368617265)\n        /* \"#utility.yul\":2122:2140   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2115:2165   */\n      mstore\n        /* \"#utility.yul\":2182:2200   */\n      0x64\n      add\n        /* \"contracts/YieldSharing.sol\":1160:1208  require(profitShare > 0, \"Invalid profit share\") */\n      tag_9\n        /* \"#utility.yul\":1862:2206   */\n      jump\n        /* \"contracts/YieldSharing.sol\":1160:1208  require(profitShare > 0, \"Invalid profit share\") */\n    tag_28:\n        /* \"contracts/YieldSharing.sol\":1326:1327  1 */\n      0x01\n        /* \"contracts/YieldSharing.sol\":1300:1832  for (uint256 fttTokenId = 1; fttTokenId <= totalTrees; fttTokenId++) {... */\n    tag_31:\n        /* \"contracts/YieldSharing.sol\":1343:1353  totalTrees */\n      dup3\n        /* \"contracts/YieldSharing.sol\":1329:1339  fttTokenId */\n      dup2\n        /* \"contracts/YieldSharing.sol\":1329:1353  fttTokenId <= totalTrees */\n      gt\n        /* \"contracts/YieldSharing.sol\":1300:1832  for (uint256 fttTokenId = 1; fttTokenId <= totalTrees; fttTokenId++) {... */\n      tag_32\n      jumpi\n        /* \"contracts/YieldSharing.sol\":1384:1400  address fttOwner */\n      0x00\n        /* \"contracts/YieldSharing.sol\":1403:1414  fttContract */\n      dup1\n      sload\n        /* \"contracts/YieldSharing.sol\":1403:1434  fttContract.ownerOf(fttTokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":762:787   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldSharing.sol\":1403:1414  fttContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/YieldSharing.sol\":1403:1422  fttContract.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":735:753   */\n      0x24\n      add\n        /* \"contracts/YieldSharing.sol\":1403:1434  fttContract.ownerOf(fttTokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/YieldSharing.sol\":1449:1467  uint256 treesOwned */\n      0x00\n        /* \"contracts/YieldSharing.sol\":1470:1481  fttContract */\n      dup1\n      sload\n        /* \"contracts/YieldSharing.sol\":1470:1510  fttContract.totalTreesPerFTT(fttTokenId) */\n      mload(0x40)\n      shl(0xe3, 0x03308413)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":762:787   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/YieldSharing.sol\":1384:1434  address fttOwner = fttContract.ownerOf(fttTokenId) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/YieldSharing.sol\":1449:1467  uint256 treesOwned */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldSharing.sol\":1470:1481  fttContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/YieldSharing.sol\":1470:1498  fttContract.totalTreesPerFTT */\n      0x19842098\n      swap1\n        /* \"#utility.yul\":735:753   */\n      0x24\n      add\n        /* \"contracts/YieldSharing.sol\":1470:1510  fttContract.totalTreesPerFTT(fttTokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_42:\n        /* \"contracts/YieldSharing.sol\":1449:1510  uint256 treesOwned = fttContract.totalTreesPerFTT(fttTokenId) */\n      swap1\n      pop\n        /* \"contracts/YieldSharing.sol\":1575:1601  uint256 profitSharePerTree */\n      0x00\n        /* \"contracts/YieldSharing.sol\":1604:1628  profitShare / totalTrees */\n      tag_43\n        /* \"contracts/YieldSharing.sol\":1618:1628  totalTrees */\n      dup7\n        /* \"contracts/YieldSharing.sol\":1604:1615  profitShare */\n      dup7\n        /* \"contracts/YieldSharing.sol\":1604:1628  profitShare / totalTrees */\n      tag_27\n      jump\t// in\n    tag_43:\n        /* \"contracts/YieldSharing.sol\":1575:1628  uint256 profitSharePerTree = profitShare / totalTrees */\n      swap1\n      pop\n        /* \"contracts/YieldSharing.sol\":1643:1661  uint256 allocation */\n      0x00\n        /* \"contracts/YieldSharing.sol\":1664:1695  profitSharePerTree * treesOwned */\n      tag_44\n        /* \"contracts/YieldSharing.sol\":1685:1695  treesOwned */\n      dup4\n        /* \"contracts/YieldSharing.sol\":1575:1628  uint256 profitSharePerTree = profitShare / totalTrees */\n      dup4\n        /* \"contracts/YieldSharing.sol\":1664:1695  profitSharePerTree * treesOwned */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"contracts/YieldSharing.sol\":1782:1820  payable(fttOwner).transfer(allocation) */\n      mload(0x40)\n        /* \"contracts/YieldSharing.sol\":1643:1695  uint256 allocation = profitSharePerTree * treesOwned */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldSharing.sol\":1782:1808  payable(fttOwner).transfer */\n      dup6\n      and\n      swap1\n        /* \"contracts/YieldSharing.sol\":1782:1820  payable(fttOwner).transfer(allocation) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/YieldSharing.sol\":1643:1695  uint256 allocation = profitSharePerTree * treesOwned */\n      dup4\n      swap1\n        /* \"contracts/YieldSharing.sol\":1782:1820  payable(fttOwner).transfer(allocation) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/YieldSharing.sol\":1643:1695  uint256 allocation = profitSharePerTree * treesOwned */\n      dup6\n        /* \"contracts/YieldSharing.sol\":1782:1808  payable(fttOwner).transfer */\n      dup9\n        /* \"contracts/YieldSharing.sol\":1782:1820  payable(fttOwner).transfer(allocation) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n        /* \"contracts/YieldSharing.sol\":1369:1832  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/YieldSharing.sol\":1355:1367  fttTokenId++ */\n      dup1\n      dup1\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      swap2\n      pop\n      pop\n        /* \"contracts/YieldSharing.sol\":1300:1832  for (uint256 fttTokenId = 1; fttTokenId <= totalTrees; fttTokenId++) {... */\n      jump(tag_31)\n    tag_32:\n      pop\n        /* \"contracts/YieldSharing.sol\":833:1839  {... */\n      pop\n      pop\n        /* \"contracts/YieldSharing.sol\":743:1839  function distributeProfit(uint256 distributedAmount, uint256 ftoTokenId) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:262   */\n    tag_5:\n        /* \"#utility.yul\":82:88   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup1\n        /* \"#utility.yul\":143:145   */\n      0x40\n        /* \"#utility.yul\":131:140   */\n      dup4\n        /* \"#utility.yul\":122:129   */\n      dup6\n        /* \"#utility.yul\":118:141   */\n      sub\n        /* \"#utility.yul\":114:146   */\n      slt\n        /* \"#utility.yul\":111:163   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":159:160   */\n      0x00\n        /* \"#utility.yul\":156:157   */\n      dup1\n        /* \"#utility.yul\":149:161   */\n      revert\n        /* \"#utility.yul\":111:163   */\n    tag_52:\n      pop\n      pop\n        /* \"#utility.yul\":182:205   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":252:254   */\n      0x20\n        /* \"#utility.yul\":237:255   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":224:256   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":14:262   */\n      jump\t// out\n        /* \"#utility.yul\":798:982   */\n    tag_16:\n        /* \"#utility.yul\":868:874   */\n      0x00\n        /* \"#utility.yul\":921:923   */\n      0x20\n        /* \"#utility.yul\":909:918   */\n      dup3\n        /* \"#utility.yul\":900:907   */\n      dup5\n        /* \"#utility.yul\":896:919   */\n      sub\n        /* \"#utility.yul\":892:924   */\n      slt\n        /* \"#utility.yul\":889:941   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":937:938   */\n      0x00\n        /* \"#utility.yul\":934:935   */\n      dup1\n        /* \"#utility.yul\":927:939   */\n      revert\n        /* \"#utility.yul\":889:941   */\n    tag_56:\n      pop\n        /* \"#utility.yul\":960:976   */\n      mload\n      swap2\n        /* \"#utility.yul\":798:982   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1335:1462   */\n    tag_49:\n        /* \"#utility.yul\":1396:1406   */\n      0x4e487b71\n        /* \"#utility.yul\":1391:1394   */\n      0xe0\n        /* \"#utility.yul\":1387:1407   */\n      shl\n        /* \"#utility.yul\":1384:1385   */\n      0x00\n        /* \"#utility.yul\":1377:1408   */\n      mstore\n        /* \"#utility.yul\":1427:1431   */\n      0x11\n        /* \"#utility.yul\":1424:1425   */\n      0x04\n        /* \"#utility.yul\":1417:1432   */\n      mstore\n        /* \"#utility.yul\":1451:1455   */\n      0x24\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1441:1456   */\n      revert\n        /* \"#utility.yul\":1467:1635   */\n    tag_25:\n        /* \"#utility.yul\":1540:1549   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1571:1580   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1588:1603   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1582:1604   */\n      dup5\n      eq\n        /* \"#utility.yul\":1568:1605   */\n      or\n        /* \"#utility.yul\":1558:1629   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1609:1627   */\n      tag_61\n      tag_49\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1467:1635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1640:1857   */\n    tag_27:\n        /* \"#utility.yul\":1680:1681   */\n      0x00\n        /* \"#utility.yul\":1706:1707   */\n      dup3\n        /* \"#utility.yul\":1696:1828   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1750:1760   */\n      0x4e487b71\n        /* \"#utility.yul\":1745:1748   */\n      0xe0\n        /* \"#utility.yul\":1741:1761   */\n      shl\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1731:1762   */\n      mstore\n        /* \"#utility.yul\":1785:1789   */\n      0x12\n        /* \"#utility.yul\":1782:1783   */\n      0x04\n        /* \"#utility.yul\":1775:1790   */\n      mstore\n        /* \"#utility.yul\":1813:1817   */\n      0x24\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1803:1818   */\n      revert\n        /* \"#utility.yul\":1696:1828   */\n    tag_63:\n      pop\n        /* \"#utility.yul\":1842:1851   */\n      div\n      swap1\n        /* \"#utility.yul\":1640:1857   */\n      jump\t// out\n        /* \"#utility.yul\":2211:2501   */\n    tag_38:\n        /* \"#utility.yul\":2281:2287   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2354   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      dup1\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2302:2354   */\n    tag_66:\n        /* \"#utility.yul\":2376:2392   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2421:2452   */\n      dup2\n      and\n        /* \"#utility.yul\":2411:2453   */\n      dup2\n      eq\n        /* \"#utility.yul\":2401:2471   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2467:2468   */\n      0x00\n        /* \"#utility.yul\":2464:2465   */\n      dup1\n        /* \"#utility.yul\":2457:2469   */\n      revert\n        /* \"#utility.yul\":2401:2471   */\n    tag_67:\n        /* \"#utility.yul\":2490:2495   */\n      swap4\n        /* \"#utility.yul\":2211:2501   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2506:2641   */\n    tag_48:\n        /* \"#utility.yul\":2545:2548   */\n      0x00\n        /* \"#utility.yul\":2566:2583   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2563:2606   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2586:2604   */\n      tag_70\n      tag_49\n      jump\t// in\n    tag_70:\n      pop\n        /* \"#utility.yul\":2633:2634   */\n      0x01\n        /* \"#utility.yul\":2622:2635   */\n      add\n      swap1\n        /* \"#utility.yul\":2506:2641   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f92f6b9b8f94f3a742fc3921878e77262b5304c6faf7aa27ff8430cab94397a964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:491:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161053538038061053583398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610477806100be6000396000f3fe60806040526004361061001e5760003560e01c8063e4af733414610023575b600080fd5b610036610031366004610368565b610038565b005b8134146100835760405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd081d985b1d59481cd95b9d60621b60448201526064015b60405180910390fd5b6001546040516318c9bde360e11b8152600481018390526000916001600160a01b0316906331937bc690602401602060405180830381865afa1580156100cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f1919061038a565b9050600081116101395760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908119513c81d1bdad95b9259606a1b604482015260640161007a565b600154604051636aa8d0b360e11b8152600481018490526000916064916001600160a01b039091169063d551a16690602401602060405180830381865afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac919061038a565b6101b690866103b9565b6101c091906103d6565b9050600081116102095760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642070726f66697420736861726560601b604482015260640161007a565b60015b82811161036157600080546040516331a9108f60e11b8152600481018490526001600160a01b0390911690636352211e90602401602060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028191906103f8565b60008054604051630330841360e31b81526004810186905292935090916001600160a01b0390911690631984209890602401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f4919061038a565b9050600061030286866103d6565b9050600061031083836103b9565b6040519091506001600160a01b0385169082156108fc029083906000818181858888f19350505050158015610349573d6000803e3d6000fd5b5050505050808061035990610428565b91505061020c565b5050505050565b6000806040838503121561037b57600080fd5b50508035926020909101359150565b60006020828403121561039c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103d0576103d06103a3565b92915050565b6000826103f357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561040a57600080fd5b81516001600160a01b038116811461042157600080fd5b9392505050565b60006001820161043a5761043a6103a3565b506001019056fea2646970667358221220f92f6b9b8f94f3a742fc3921878e77262b5304c6faf7aa27ff8430cab94397a964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x535 CODESIZE SUB DUP1 PUSH2 0x535 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x7C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xAF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98 DUP4 PUSH2 0x60 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6 PUSH1 0x20 DUP5 ADD PUSH2 0x60 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x477 DUP1 PUSH2 0xBE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE4AF7334 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST DUP2 CALLVALUE EQ PUSH2 0x83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD081D985B1D59481CD95B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18C9BDE3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x31937BC6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x139 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908119513C81D1BDAD95B9259 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6AA8D0B3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x64 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD551A166 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x1B6 SWAP1 DUP7 PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x3D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642070726F666974207368617265 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3308413 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x19842098 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x302 DUP7 DUP7 PUSH2 0x3D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x310 DUP4 DUP4 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x359 SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3D0 JUMPI PUSH2 0x3D0 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0x2F PUSH12 0x9B8F94F3A742FC3921878E77 0x26 0x2B MSTORE8 DIV 0xC6 STATICCALL 0xF7 0xAA 0x27 SELFDESTRUCT DUP5 ADDRESS 0xCA 0xB9 NUMBER SWAP8 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "452:1390:0:-:0;;;543:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;624:11;:46;;-1:-1:-1;;;;;624:46:0;;;-1:-1:-1;;;;;;624:46:0;;;;;;;;681;;;;;;;;;;;452:1390;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;452:1390:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@distributeProfit_152": {
									"entryPoint": 56,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_33c920c9836f04b7ee6a56df04e413d95b1ea7b1af218a6104cf35619c8423fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9793215bdc5b6b8e9fbba2e314aa0c0bb0b51683fd4acb224df73507ecb99a3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2643:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "101:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "147:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "156:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "159:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "149:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "149:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "122:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "131:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "118:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "143:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "114:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:32:1"
															},
															"nodeType": "YulIf",
															"src": "111:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "172:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "182:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "182:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "214:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "241:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "224:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "214:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "59:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "70:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "82:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "90:6:1",
														"type": ""
													}
												],
												"src": "14:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "441:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "469:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "492:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "503:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "488:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "481:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "531:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "542:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "527:18:1"
																	},
																	{
																		"hexValue": "496e636f72726563742076616c75652073656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "547:22:1",
																		"type": "",
																		"value": "Incorrect value sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "579:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "591:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "579:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "418:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "432:4:1",
														"type": ""
													}
												],
												"src": "267:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "717:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "727:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "739:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "750:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "727:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "762:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "697:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "708:4:1",
														"type": ""
													}
												],
												"src": "616:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "925:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "934:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "937:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "927:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "927:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "927:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "900:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "909:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "896:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "892:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:32:1"
															},
															"nodeType": "YulIf",
															"src": "889:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "950:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "966:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "960:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "845:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "856:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "868:6:1",
														"type": ""
													}
												],
												"src": "798:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1178:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1171:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1171:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1223:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1208:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1228:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1201:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1251:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1262:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:18:1"
																	},
																	{
																		"hexValue": "496e76616c69642046544f20746f6b656e4964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1267:21:1",
																		"type": "",
																		"value": "Invalid FTO tokenId"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1240:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1310:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1321:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1306:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33c920c9836f04b7ee6a56df04e413d95b1ea7b1af218a6104cf35619c8423fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1138:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1152:4:1",
														"type": ""
													}
												],
												"src": "987:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1391:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1396:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1387:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1424:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1417:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1451:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1441:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1335:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1529:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1544:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1547:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1529:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1607:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1578:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1571:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1571:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1585:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "1592:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1601:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1588:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1588:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1582:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1568:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1568:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:45:1"
															},
															"nodeType": "YulIf",
															"src": "1558:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1498:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1501:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1507:7:1",
														"type": ""
													}
												],
												"src": "1467:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1686:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1717:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1738:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1745:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1750:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1741:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1741:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1731:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1731:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1782:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1785:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1775:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1775:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1775:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1813:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1706:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:1"
															},
															"nodeType": "YulIf",
															"src": "1696:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1837:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1846:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1849:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1837:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1671:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1674:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1680:1:1",
														"type": ""
													}
												],
												"src": "1640:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2036:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2064:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2046:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2087:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2098:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2083:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2076:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2137:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:18:1"
																	},
																	{
																		"hexValue": "496e76616c69642070726f666974207368617265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2142:22:1",
																		"type": "",
																		"value": "Invalid profit share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2115:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2174:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2186:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2182:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2174:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9793215bdc5b6b8e9fbba2e314aa0c0bb0b51683fd4acb224df73507ecb99a3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2013:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2027:4:1",
														"type": ""
													}
												],
												"src": "1862:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2292:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:32:1"
															},
															"nodeType": "YulIf",
															"src": "2302:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2376:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2367:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2455:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2464:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2467:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2457:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2457:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2457:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2414:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2425:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2440:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2445:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2436:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2436:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2449:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2432:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2432:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2421:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2421:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2411:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:50:1"
															},
															"nodeType": "YulIf",
															"src": "2401:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2480:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2490:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2258:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2269:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2281:6:1",
														"type": ""
													}
												],
												"src": "2211:290:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2584:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2586:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2586:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2586:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2580:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:17:1"
															},
															"nodeType": "YulIf",
															"src": "2563:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2615:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2626:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2535:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2545:3:1",
														"type": ""
													}
												],
												"src": "2506:135:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Incorrect value sent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_33c920c9836f04b7ee6a56df04e413d95b1ea7b1af218a6104cf35619c8423fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid FTO tokenId\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9793215bdc5b6b8e9fbba2e314aa0c0bb0b51683fd4acb224df73507ecb99a3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid profit share\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063e4af733414610023575b600080fd5b610036610031366004610368565b610038565b005b8134146100835760405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd081d985b1d59481cd95b9d60621b60448201526064015b60405180910390fd5b6001546040516318c9bde360e11b8152600481018390526000916001600160a01b0316906331937bc690602401602060405180830381865afa1580156100cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f1919061038a565b9050600081116101395760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908119513c81d1bdad95b9259606a1b604482015260640161007a565b600154604051636aa8d0b360e11b8152600481018490526000916064916001600160a01b039091169063d551a16690602401602060405180830381865afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac919061038a565b6101b690866103b9565b6101c091906103d6565b9050600081116102095760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642070726f66697420736861726560601b604482015260640161007a565b60015b82811161036157600080546040516331a9108f60e11b8152600481018490526001600160a01b0390911690636352211e90602401602060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028191906103f8565b60008054604051630330841360e31b81526004810186905292935090916001600160a01b0390911690631984209890602401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f4919061038a565b9050600061030286866103d6565b9050600061031083836103b9565b6040519091506001600160a01b0385169082156108fc029083906000818181858888f19350505050158015610349573d6000803e3d6000fd5b5050505050808061035990610428565b91505061020c565b5050505050565b6000806040838503121561037b57600080fd5b50508035926020909101359150565b60006020828403121561039c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103d0576103d06103a3565b92915050565b6000826103f357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561040a57600080fd5b81516001600160a01b038116811461042157600080fd5b9392505050565b60006001820161043a5761043a6103a3565b506001019056fea2646970667358221220f92f6b9b8f94f3a742fc3921878e77262b5304c6faf7aa27ff8430cab94397a964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE4AF7334 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST DUP2 CALLVALUE EQ PUSH2 0x83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD081D985B1D59481CD95B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18C9BDE3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x31937BC6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x139 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908119513C81D1BDAD95B9259 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6AA8D0B3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x64 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD551A166 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x1B6 SWAP1 DUP7 PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x3D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642070726F666974207368617265 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3308413 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x19842098 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x302 DUP7 DUP7 PUSH2 0x3D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x310 DUP4 DUP4 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x359 SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3D0 JUMPI PUSH2 0x3D0 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0x2F PUSH12 0x9B8F94F3A742FC3921878E77 0x26 0x2B MSTORE8 DIV 0xC6 STATICCALL 0xF7 0xAA 0x27 SELFDESTRUCT DUP5 ADDRESS 0xCA 0xB9 NUMBER SWAP8 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "452:1390:0:-:0;;;;;;;;;;;;;;;;;;;;;743:1096;;;;;;:::i;:::-;;:::i;:::-;;;865:17;852:9;:30;844:63;;;;-1:-1:-1;;;844:63:0;;469:2:1;844:63:0;;;451:21:1;508:2;488:18;;;481:30;-1:-1:-1;;;527:18:1;;;520:50;587:18;;844:63:0;;;;;;;;;941:11;;:40;;-1:-1:-1;;;941:40:0;;;;;762:25:1;;;920:18:0;;-1:-1:-1;;;;;941:11:0;;:28;;735:18:1;;941:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;920:61;;1013:1;1000:10;:14;992:46;;;;-1:-1:-1;;;992:46:0;;1189:2:1;992:46:0;;;1171:21:1;1228:2;1208:18;;;1201:30;-1:-1:-1;;;1247:18:1;;;1240:49;1306:18;;992:46:0;987:343:1;992:46:0;1094:11;;:48;;-1:-1:-1;;;1094:48:0;;;;;762:25:1;;;1051:19:0;;1146:3;;-1:-1:-1;;;;;1094:11:0;;;;:36;;735:18:1;;1094:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1074:68;;:17;:68;:::i;:::-;1073:76;;;;:::i;:::-;1051:98;;1182:1;1168:11;:15;1160:48;;;;-1:-1:-1;;;1160:48:0;;2064:2:1;1160:48:0;;;2046:21:1;2103:2;2083:18;;;2076:30;-1:-1:-1;;;2122:18:1;;;2115:50;2182:18;;1160:48:0;1862:344:1;1160:48:0;1326:1;1300:532;1343:10;1329;:24;1300:532;;1384:16;1403:11;;:31;;-1:-1:-1;;;1403:31:0;;;;;762:25:1;;;-1:-1:-1;;;;;1403:11:0;;;;:19;;735:18:1;;1403:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1449:18;1470:11;;:40;;-1:-1:-1;;;1470:40:0;;;;;762:25:1;;;1384:50:0;;-1:-1:-1;1449:18:0;;-1:-1:-1;;;;;1470:11:0;;;;:28;;735:18:1;;1470:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1449:61;-1:-1:-1;1575:26:0;1604:24;1618:10;1604:11;:24;:::i;:::-;1575:53;-1:-1:-1;1643:18:0;1664:31;1685:10;1575:53;1664:31;:::i;:::-;1782:38;;1643:52;;-1:-1:-1;;;;;;1782:26:0;;;:38;;;;;1643:52;;1782:38;;;;1643:52;1782:26;:38;;;;;;;;;;;;;;;;;;;;;1369:463;;;;1355:12;;;;;:::i;:::-;;;;1300:532;;;;833:1006;;743:1096;;:::o;14:248:1:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:1;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:1:o;798:184::-;868:6;921:2;909:9;900:7;896:23;892:32;889:52;;;937:1;934;927:12;889:52;-1:-1:-1;960:16:1;;798:184;-1:-1:-1;798:184:1:o;1335:127::-;1396:10;1391:3;1387:20;1384:1;1377:31;1427:4;1424:1;1417:15;1451:4;1448:1;1441:15;1467:168;1540:9;;;1571;;1588:15;;;1582:22;;1568:37;1558:71;;1609:18;;:::i;:::-;1467:168;;;;:::o;1640:217::-;1680:1;1706;1696:132;;1750:10;1745:3;1741:20;1738:1;1731:31;1785:4;1782:1;1775:15;1813:4;1810:1;1803:15;1696:132;-1:-1:-1;1842:9:1;;1640:217::o;2211:290::-;2281:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:52;;;2350:1;2347;2340:12;2302:52;2376:16;;-1:-1:-1;;;;;2421:31:1;;2411:42;;2401:70;;2467:1;2464;2457:12;2401:70;2490:5;2211:290;-1:-1:-1;;;2211:290:1:o;2506:135::-;2545:3;2566:17;;;2563:43;;2586:18;;:::i;:::-;-1:-1:-1;2633:1:1;2622:13;;2506:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "228600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"distributeProfit(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 543,
									"end": 735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 543,
									"end": 735,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 543,
									"end": 735,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 624,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 624,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 624,
									"end": 670,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 624,
									"end": 670,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 624,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 681,
									"end": 727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 681,
									"end": 727,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 1842,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f92f6b9b8f94f3a742fc3921878e77262b5304c6faf7aa27ff8430cab94397a964736f6c63430008120033",
									".code": [
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "E4AF7334"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 1842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 743,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 743,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 861,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 882,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 844,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 488,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 488,
											"end": 506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 488,
											"end": 506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 481,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B98DBDC9C9958DD081D985B1D59481CD95B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 527,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 527,
											"end": 545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 527,
											"end": 545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 520,
											"end": 570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 587,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 907,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 844,
											"end": 907,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 844,
											"end": 907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18C9BDE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 941,
											"end": 952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "31937BC6"
										},
										{
											"begin": 941,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 941,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 941,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1014,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908119513C81D1BDAD95B9259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 987,
											"end": 1330,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 992,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6AA8D0B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1146,
											"end": 1149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "D551A166"
										},
										{
											"begin": 1094,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1094,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1094,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1074,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1074,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1074,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1073,
											"end": 1149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1073,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1073,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1183,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642070726F666974207368617265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1862,
											"end": 2206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1403,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1403,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3308413"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1434,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "19842098"
										},
										{
											"begin": 1470,
											"end": 1498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1470,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1470,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1618,
											"end": 1628,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1615,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1604,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1628,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1604,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1685,
											"end": 1695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1664,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1695,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1664,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1695,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1808,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1355,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 1839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 1839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 262,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 14,
											"end": 262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 88,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 122,
											"end": 129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 118,
											"end": 141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 114,
											"end": 146,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 111,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 252,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 256,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 982,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 798,
											"end": 982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 900,
											"end": 907,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 892,
											"end": 924,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 889,
											"end": 941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 889,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 889,
											"end": 941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 937,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 927,
											"end": 939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 889,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 889,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 798,
											"end": 982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 798,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1462,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1335,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1391,
											"end": 1394,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1387,
											"end": 1407,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1431,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1417,
											"end": 1432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1456,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1467,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1605,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1558,
											"end": 1629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1609,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1857,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1640,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1696,
											"end": 1828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1741,
											"end": 1761,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1818,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1828,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1696,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2501,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2211,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2302,
											"end": 2354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2354,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2302,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2421,
											"end": 2452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2401,
											"end": 2471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2401,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2501,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2506,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2583,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2566,
											"end": 2583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2563,
											"end": 2606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2586,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/YieldSharing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"distributeProfit(uint256,uint256)": "e4af7334"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fttContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ftoContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ftoTokenId\",\"type\":\"uint256\"}],\"name\":\"distributeProfit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldSharing.sol\":\"YieldSharing\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YieldSharing.sol\":{\"keccak256\":\"0x1714d66d59be4a8a87694c6cdb4f1ce8c9ee6a7b83d197da40eb43ed844ac95d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b199724d4e7f5ce16be9172d20e59985b4fbdde2f2ad3a2ed504b1d553de8303\",\"dweb:/ipfs/QmY2p1wY18E7TZoxuZ5r5tt35qFabEPjic7vghfZZ1qsfT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "contracts/YieldSharing.sol:YieldSharing",
								"label": "fttContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(FTTContract)16"
							},
							{
								"astId": 37,
								"contract": "contracts/YieldSharing.sol:YieldSharing",
								"label": "ftoContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(FTOContract)31"
							}
						],
						"types": {
							"t_contract(FTOContract)31": {
								"encoding": "inplace",
								"label": "contract FTOContract",
								"numberOfBytes": "20"
							},
							"t_contract(FTTContract)16": {
								"encoding": "inplace",
								"label": "contract FTTContract",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/YieldSharing.sol": {
				"ast": {
					"absolutePath": "contracts/YieldSharing.sol",
					"exportedSymbols": {
						"FTOContract": [
							31
						],
						"FTTContract": [
							16
						],
						"YieldSharing": [
							153
						]
					},
					"id": 154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FTTContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "FTTContract",
							"nameLocation": "70:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "19842098",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalTreesPerFTT",
									"nameLocation": "98:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "fttTokenId",
												"nameLocation": "123:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "115:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:20:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:9:0"
									},
									"scope": 16,
									"src": "89:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "182:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "190:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:9:0"
									},
									"scope": 16,
									"src": "173:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 154,
							"src": "60:182:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FTOContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "FTOContract",
							"nameLocation": "256:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d551a166",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenProfitPercentage",
									"nameLocation": "284:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "ftoTokenId",
												"nameLocation": "317:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "309:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:20:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:9:0"
									},
									"scope": 31,
									"src": "275:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31937bc6",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalTreesPerFTO",
									"nameLocation": "376:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "ftoTokenId",
												"nameLocation": "401:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "393:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:20:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:9:0"
									},
									"scope": 31,
									"src": "367:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 154,
							"src": "246:202:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "YieldSharing",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "YieldSharing",
							"nameLocation": "461:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "fttContract",
									"nameLocation": "493:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "481:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_FTTContract_$16",
										"typeString": "contract FTTContract"
									},
									"typeName": {
										"id": 33,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 32,
											"name": "FTTContract",
											"nameLocations": [
												"481:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 16,
											"src": "481:11:0"
										},
										"referencedDeclaration": 16,
										"src": "481:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FTTContract_$16",
											"typeString": "contract FTTContract"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "ftoContract",
									"nameLocation": "523:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "511:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_FTOContract_$31",
										"typeString": "contract FTOContract"
									},
									"typeName": {
										"id": 36,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 35,
											"name": "FTOContract",
											"nameLocations": [
												"511:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "511:11:0"
										},
										"referencedDeclaration": 31,
										"src": "511:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FTOContract_$31",
											"typeString": "contract FTOContract"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "613:122:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "fttContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "624:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_FTTContract_$16",
															"typeString": "contract FTTContract"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 46,
																"name": "_fttContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "650:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 45,
															"name": "FTTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "638:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FTTContract_$16_$",
																"typeString": "type(contract FTTContract)"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "638:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_FTTContract_$16",
															"typeString": "contract FTTContract"
														}
													},
													"src": "624:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_FTTContract_$16",
														"typeString": "contract FTTContract"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "624:46:0"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "ftoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "681:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_FTOContract_$31",
															"typeString": "contract FTOContract"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 52,
																"name": "_ftoContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "707:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 51,
															"name": "FTOContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "695:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FTOContract_$31_$",
																"typeString": "type(contract FTOContract)"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "695:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_FTOContract_$31",
															"typeString": "contract FTOContract"
														}
													},
													"src": "681:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_FTOContract_$31",
														"typeString": "contract FTOContract"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "681:46:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "_fttContractAddress",
												"nameLocation": "563:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "555:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_ftoContractAddress",
												"nameLocation": "592:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "584:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:58:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:0:0"
									},
									"scope": 153,
									"src": "543:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "833:1006:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 65,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "852:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "856:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "852:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 67,
																"name": "distributedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "865:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "852:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f72726563742076616c75652073656e74",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "884:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
																"typeString": "literal_string \"Incorrect value sent\""
															},
															"value": "Incorrect value sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
																"typeString": "literal_string \"Incorrect value sent\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "844:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "844:63:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "totalTrees",
														"nameLocation": "928:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "920:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 72,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"arguments": [
														{
															"id": 76,
															"name": "ftoTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "970:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 74,
															"name": "ftoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "941:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_FTOContract_$31",
																"typeString": "contract FTOContract"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "953:16:0",
														"memberName": "totalTreesPerFTO",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "941:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "920:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 80,
																"name": "totalTrees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1013:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1000:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642046544f20746f6b656e4964",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1016:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33c920c9836f04b7ee6a56df04e413d95b1ea7b1af218a6104cf35619c8423fe",
																"typeString": "literal_string \"Invalid FTO tokenId\""
															},
															"value": "Invalid FTO tokenId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33c920c9836f04b7ee6a56df04e413d95b1ea7b1af218a6104cf35619c8423fe",
																"typeString": "literal_string \"Invalid FTO tokenId\""
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "992:46:0"
											},
											{
												"assignments": [
													87
												],
												"declarations": [
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "profitShare",
														"nameLocation": "1059:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "1051:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 86,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1051:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "distributedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1074:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 91,
																			"name": "ftoTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1131:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 89,
																			"name": "ftoContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 37,
																			"src": "1094:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_FTOContract_$31",
																				"typeString": "contract FTOContract"
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:24:0",
																		"memberName": "getTokenProfitPercentage",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 23,
																		"src": "1094:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256)"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1094:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1074:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 94,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1073:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1146:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1073:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1051:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "profitShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "1168:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1182:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1168:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f666974207368617265",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1185:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9793215bdc5b6b8e9fbba2e314aa0c0bb0b51683fd4acb224df73507ecb99a3d",
																"typeString": "literal_string \"Invalid profit share\""
															},
															"value": "Invalid profit share"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9793215bdc5b6b8e9fbba2e314aa0c0bb0b51683fd4acb224df73507ecb99a3d",
																"typeString": "literal_string \"Invalid profit share\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1160:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1160:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1160:48:0"
											},
											{
												"body": {
													"id": 149,
													"nodeType": "Block",
													"src": "1369:463:0",
													"statements": [
														{
															"assignments": [
																116
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 116,
																	"mutability": "mutable",
																	"name": "fttOwner",
																	"nameLocation": "1392:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1384:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1384:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 119,
																		"name": "fttTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "1423:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 117,
																		"name": "fttContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "1403:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FTTContract_$16",
																			"typeString": "contract FTTContract"
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1415:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "1403:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1403:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1384:50:0"
														},
														{
															"assignments": [
																123
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 123,
																	"mutability": "mutable",
																	"name": "treesOwned",
																	"nameLocation": "1457:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1449:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 122,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1449:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 128,
															"initialValue": {
																"arguments": [
																	{
																		"id": 126,
																		"name": "fttTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "1499:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 124,
																		"name": "fttContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "1470:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FTTContract_$16",
																			"typeString": "contract FTTContract"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1482:16:0",
																	"memberName": "totalTreesPerFTT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "1470:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256)"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1470:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1449:61:0"
														},
														{
															"assignments": [
																130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 130,
																	"mutability": "mutable",
																	"name": "profitSharePerTree",
																	"nameLocation": "1583:18:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1575:26:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 129,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1575:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 134,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 131,
																	"name": "profitShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1604:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 132,
																	"name": "totalTrees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1618:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1604:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1575:53:0"
														},
														{
															"assignments": [
																136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 136,
																	"mutability": "mutable",
																	"name": "allocation",
																	"nameLocation": "1651:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1643:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 135,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1643:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 140,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 137,
																	"name": "profitSharePerTree",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1664:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 138,
																	"name": "treesOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1685:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1664:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1643:52:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 146,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "1809:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 143,
																				"name": "fttOwner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "1790:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1782:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 141,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1782:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1782:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1800:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1782:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1782:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 148,
															"nodeType": "ExpressionStatement",
															"src": "1782:38:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 109,
														"name": "fttTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1329:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 110,
														"name": "totalTrees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1343:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1329:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 150,
												"initializationExpression": {
													"assignments": [
														106
													],
													"declarations": [
														{
															"constant": false,
															"id": 106,
															"mutability": "mutable",
															"name": "fttTokenId",
															"nameLocation": "1313:10:0",
															"nodeType": "VariableDeclaration",
															"scope": 150,
															"src": "1305:18:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 105,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1305:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 108,
													"initialValue": {
														"hexValue": "31",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1305:22:0"
												},
												"loopExpression": {
													"expression": {
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1355:12:0",
														"subExpression": {
															"id": 112,
															"name": "fttTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1355:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ExpressionStatement",
													"src": "1355:12:0"
												},
												"nodeType": "ForStatement",
												"src": "1300:532:0"
											}
										]
									},
									"functionSelector": "e4af7334",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeProfit",
									"nameLocation": "752:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "distributedAmount",
												"nameLocation": "777:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "769:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "ftoTokenId",
												"nameLocation": "804:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "796:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:47:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:0:0"
									},
									"scope": 153,
									"src": "743:1096:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 154,
							"src": "452:1390:0",
							"usedErrors": []
						}
					],
					"src": "33:1811:0"
				},
				"id": 0
			}
		}
	}
}